- name: Generate certificate-key for other masters
  ansible.builtin.shell: 
    cmd: "KUBECONFIG=/etc/kubernetes/admin.conf kubeadm init phase upload-certs --upload-certs | grep -vw -e certificate -e Namespace"
  delegate_to: "{{ groups.master[0] }}"
  register: certificate_key
  run_once: true
  changed_when: false

- name: Generate token and join for other masters on first master
  ansible.builtin.shell:
    cmd: "echo $(KUBECONFIG=/etc/kubernetes/admin.conf kubeadm token create --print-join-command) --control-plane --certificate-key {{ certificate_key.stdout }}"
  register: join_content
  delegate_to: "{{ groups.master[0] }}"
  changed_when: false

- name: Execute join command on other masters
  ansible.builtin.shell: 
    cmd: "KUBECONFIG=/etc/kubernetes/admin.conf {{ join_content.stdout }}"
    creates: /etc/kubernetes/admin.conf
  when: join_content is defined
 
- name: Which nodes have taints?
  ansible.builtin.shell:
    cmd: kubectl get nodes --kubeconfig /etc/kubernetes/admin.conf -o jsonpath='{range .items[*]}{.metadata.name} {.spec.taints}{"\n"}{end}' | grep NoSchedule |awk '{print $1}'
  register: taint_nodes
  changed_when: false

- name: Make node(s) schedulable
  ansible.builtin.shell:
    cmd: kubectl taint nodes {{ item }} --kubeconfig /etc/kubernetes/admin.conf node-role.kubernetes.io/control-plane:NoSchedule-
  ignore_errors: true
  loop: "{{ taint_nodes.stdout_lines }}"
  when: taint_master is false
